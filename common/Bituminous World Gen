package ZFuelCraftMod.common;

import java.util.Random;


import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import cpw.mods.fml.common.IWorldGenerator;

public class WorldGeneratorZFuelCraft implements IWorldGenerator{

  @Override
	public void generate(Random random, int chunkX, int chunkZ, World world,
			IChunkProvider chunkGenerator, IChunkProvider chunkProvider) {
		switch(world.provider.dimensionId){
		
		case 1:
			generateNether(world, random, chunkX * 16, chunkZ * 16);
		case 0:
			generateSurface(world, random, chunkX * 16, chunkZ * 16);
		case -1:
			generateEnd(world, random, chunkX * 16, chunkZ * 16);
		
		}
	
	}

	private void generateEnd(World world, Random random, int i, int j) {
		// TODO Auto-generated method stub
		
	}

	private void generateNether(World world, Random random, int i, int j) {
		// TODO Auto-generated method stub
		
	}

	private void generateSurface(World world, Random random, int chunkX,int chunkZ) {
		for(int i = 0; i < 10; i++){
			int xCoord = chunkX + random.nextInt(16);
			int yCoord = random.nextInt(50);
			int zCoord = chunkZ + random.nextInt(16);
			
			(new WorldGenMinable(ZFuelCraftMod.ligniteOre.blockID, 5)).generate(world, random, xCoord, yCoord, zCoord);
			}
		}
	private void generateSurface1(World world, Random random, int chunkX,int chunkZ) {
		for(int i = 0; i < 100; i++){
			int xCoord = chunkX + random.nextInt(16);
			int yCoord = random.nextInt(50);
			int zCoord = chunkZ + random.nextInt(16);
			
			(new WorldGenMinable(ZFuelCraftMod.bituminousOre.blockID, 5)).generate(world, random, xCoord, yCoord, zCoord);
			}
	}
		private void generateSurface11(World world, Random random, int chunkX,int chunkZ) {
			for(int i = 0; i < 100; i++){
				int xCoord = chunkX + random.nextInt(16);
				int yCoord = random.nextInt(50);
				int zCoord = chunkZ + random.nextInt(16);
				
				(new WorldGenMinable(ZFuelCraftMod.bituminousOre.blockID, 5)).generate(world, random, xCoord, yCoord, zCoord);
				}
				
		}
}
		
	
